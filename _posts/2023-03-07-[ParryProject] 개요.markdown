---
title:  "[ParryProject] 개요"
date:   2023-03-07
categories: [Unity, ParryProject]
tag: [unity, game, study]
---

## **개요**
---
아직 유니티를 배우는 과정이지만, 게임 결과물을 만들고 싶다는 생각은 항상 품고 있었다.<br/>
아직 공부할 내용은 많고 봐야 할 강의도 수두룩하게 쟁여두긴 했지만, 무언가를 만들고 싶다는 열정을 감출 수가 없었다.<br/>
지금까지 계획도 없이 그런 시도를 했다가 포기한 적이 한 두 번이 아니었기에, 이왕 할 거면 계획적으로 하자는 생각으로 시작하게 되었다.<br/>
만들면서 필요한 걸 찾아 배우자는...그런 취지인 셈.<br/><br/>

## **무엇을 만들려 하는가**
---
기본적으로 2D 플랫포머 게임으로 구상중이다.<br/><br/>
패링, 튕겨내기 위주로 전투가 진행되는 게임을 만들고자 한다.<br/>
프롬 소프트웨어의 게임들에서 큰 영향을 받았다. 소울 시리즈의 패링, 세키로의 튕겨내기 등.<br/>
이 외에도 컵헤드, 할로우 나이트 등 다양한 게임의 패링 시스템에 영향을 받았다.<br/><br/>
그렇게 결정한 큰 틀은, **적의 공격을 패링함으로써 에너지를 수급하고, 수급한 에너지로 스킬을 구사하는 게임**.<br/>
사심만 잔뜩 욱여넣은 기획이다.<br/><br/>
스토리, 세계관 부분은 아직은 시기상조라 생각한다.<br/>
일단은 전투같은 기능 구현을 연습하는 데에 집중하기로.<br/>
내 저열한 스토리텔링 능력을 드러내고 싶지 않기도 하고.<br/><br/>
일단 가제는 뭔가 있어 보이게 [ParryProject]라고 붙였다.

## **구상**
---
보스 도장깨기 형식으로 진행하고자 한다. 이것 역시 내 사심.<br/><br/>
플레이어는 기본 근접 공격과 방어(패링)가 가능하다. 패링 가능한 적의 공격-투사체, 참격 등을 성공적으로 방어하면, 해당 공격을 무시하고 에너지를 충전한다.
충전량은 적 공격의 위력에 비례. 충전된 에너지를 통해 다양한 스킬로 적을 공격한다.<br/><br/>
몬스터는 일단 보스로만 구상하고 있다. 두 가지 유형으로 구상 중이다 - 고정형, 패턴형. 일단 부르기 쉽게 임의로 유형 이름을 붙였다.<br/>
- **고정형**: 맵에 고정되어 움직이지 않고 공격하는 보스 (할로우 나이트의 흡충어미, Mo:Astray의 Dylan을 비롯한 보스들)
- **패턴형**: 패턴을 구사하며 움직이는 보스 (프롬 소프트웨어 게임, 할로우 나이트의 전반적인 보스들)

다양한 보스의 패턴을 어떤 식으로 구현할 지 고민하면서 만들 것. 가장 기대되면서도 걱정되는 과정이다.

## **지금까지 구현한 것**
---
![제작중인화면](/assets/img/20230307/K-20230225-190310.png)
_현재 진행 상황_
- [x] 플레이어의 좌우 이동, 점프
- [x] 플레이어의 패링, 적의 투사체와 참격 패링 반응 구현
- [x] 적 공격에 대한 피격과 HP 감소

## **앞으로 구현할 것**
---
- [ ] 간략한 UI: 메인 화면, 전투 중, 게임 오버
- [ ] 에너지 잔여량에 따른 스킬 사용 - 임시 스킬 구현
- [ ] 적 처치 구현

## **유의할 점**
---
```
void OnTriggerEnter2D(Collider2D collision)
    {
        if (collision.gameObject.CompareTag("EnemySlash"))
        {
            EnemySlash slash = collision.GetComponent<EnemySlash>();
            if (collision.IsTouching(Parry.GetComponent<Collider2D>())) return;
            Debug.Log("player hitted");

            hp--;
        }
    }
```
- 패링 이펙트와 플레이어가 동시에 적 참격에 겹쳤을 때, 항상 플레이어와의 충돌이 먼저 발생했다. 이를 `IsTouching()` 함수를 사용해서 해결했지만, 이 과정이 효율적인 과정인지는 아직 판단하지 못했다. 추후에 자세히 알아볼 것.
- 플레이어 스프라이트와 바닥 플랫폼 사이에 0.5픽셀 정도의 틈이 존재한다. 나중에 스프라이트를 직접 만들게 된다면 이를 감안할 것. 스프라이트를 살짝 크게 설정하거나, `Project Setting` → `Physics 2D` → `Default Contact Offset` 값을 조정할 것.

## **기타**
---
잘 될지 안 될지는 모르겠지만, 적어도 이번에는 오래 걸리더라도 확실한 결과물을 내 보고 싶다.<br/><br/>
처음에는 데드 셀 같은 고퀄리티 캐릭터 도트를 찍겠다는 욕심을 가졌었다. 근데 아무리 생각해봐도 내 실력으로는 당연히 무리고, 누군가에게 부탁하기도 어려울 것 같다. 결국 할로우 나이트같은 간단한 그래픽으로 하기로 일단은 결정.<br/>
스프라이트를 도트로 할지, 그 뭐냐...뭐라고 하냐. 쨌든 할로우 나이트나 구버전 아이작같은 느낌으로 할 지 아직 고민중이다. 시기상조이긴 하지만.<br/><br/>
효율적인 코딩법에 대한 설명하기 어려운 강박이 있는 것 같다. 메모리 효율이라든가 속도라든가 가비지 컬렉터라든가...아직 알지도 못하는 부분에 있어서 이렇게 걱정을 하는 게 맞나 싶다. 일단은 구현에 집중을 하고 나중에 더 공부하면서 뜯어 고치는 게 나으려나.<br/><br/>
스킬 구성이 가장 큰 고민이다. 단순히 멋지기만 한 스킬이 아니라 각각의 장단이 있고, 상황에 따라 달리 쓰여 버려지는 게 없으며, 하나의 정석 공략법이 아닌 자신의 취향대로 커스텀해도 플레이에 지장이 없는 그런...<br/>
밸런스 패치가 괜히 어려운 게 아니지. 게임 플레이나 리뷰 영상들 찾아보면서 방향성이라도 잡아 보자.
